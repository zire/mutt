[general]
accounts = Gmail
ui = TTY.TTYUI
fsync = False
pythonfile = ~/.mutt/offlineimap.py

[Account Gmail]
localrepository = Gmail-Local
remoterepository = Gmail-Remote
status_backend = sqlite
# autorefresh = 0.5
# quick = 10

[Repository Gmail-Local]
type = Maildir
localfolders = ~/Mail/herbert.yang.gmail.com/
sep = /

[Repository Gmail-Remote]
type = Gmail
remoteuser = herbert.yang@gmail.com
remotepasseval = get_keychain_pass(account="herbert.yang@gmail.com", server="imap.gmail.com")
realdelete = yes
keepalive = 60
# holdconnectionopen = yes
sslcacertfile = /usr/local/etc/openssl/cert.pem
folderfilter = lambda folder: folder not in [	'[Gmail]/All Mail',
												'[Gmail]/Important',
												'[Gmail]/Starred',
												]

[mbnames]
enabled = yes
filename = ~/.mutt/mailboxes
header = "mailboxes "
peritem = "+%(accountname)s/%(foldername)s"
sep = " "
footer = "\n"

[Repository Gmail-Local]
nametrans = lambda folder: { 	'drafts':	'[Gmail]/Drafts',
								'sent':		'[Gmail]/Sent Mail',
								'important':'[Gmail]/Important',
								'spam':		'[Gmail]/Spam',
								'flagged':	'[Gmail]/Starred',
								'trash':	'[Gmail]/Trash',
								'archive':	'[Gmail]/All Mail',
								}.get(folder, folder)

[Repository Gmail-Remote]
nametrans = lambda folder: {	'[Gmail]/Drafts':	'drafts',
								'[Gmail]/Sent Mail':'sent',
								'[Gmail]/Starred':	'flagged',
								'[Gmail]/Important':'important',
								'[Gmail]/Spam':		'spam',
								'[Gmail]/Trash':	'trash',
								'[Gmail]/All Mail':	'archive',
								}.get(folder, folder)


